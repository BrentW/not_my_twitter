name: "Incoming Automation"

on:
  issue_comment:
    types: [created]

jobs:
  incoming_automation:
    runs-on: ubuntu-latest
    if: github.event.issue.pull_request
    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
          
      - name: Split comment into files
        uses: actions/github-script@v6
        with:
          script: |
            const comment = context.payload.comment.body;
            const startMarker = "-FILE START-";
            const endMarker = "-FILE END-";
            const fileSections = comment.split(startMarker).map(section => section.trim()).filter(item => item !== '');

            for (let i = 0; i < fileSections.length; i++) {
              console.log('Parsing section')
              const section = fileSections[i];
              const splitSections = section.split('\n').filter(item => item !== '').map(line => line.trim());
              const filePathLine = splitSections.shift();
              splitSections.pop();
              const fileContent = splitSections.join('\n');
              console.log("filePathLine");
              console.log(filePathLine);
              console.log("fileContent");
              console.log(fileContent);
              
              if (filePathLine) {
                const fullPath = `${filePathLine}`;
                await github.rest.repos.createOrUpdateFileContents({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: fullPath,
                  message: `Create ${fullPath}`,
                  content: Buffer.from(fileContent).toString('base64'),
                  branch: '${{ steps.comment-branch.outputs.head_ref }}'
                });
              }
            }

      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
      - name: Add comment to PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const name = '${{ github.workflow   }}';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? 'succeeded ✅' : 'failed ❌'}\n${url}`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
